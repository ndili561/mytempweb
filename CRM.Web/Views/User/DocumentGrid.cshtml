@model CRM.Entity.Search.Common.DocumentSearchModel
@{
    ViewData["Title"] = "Documents";
}
<div class="ibox-content">
    @using (Html.BeginForm("Upload", "Person", FormMethod.Post, new { @name = "myDropzone",  id = "myDropzone", @enctype = "multipart/form-data" }))
    {

        <br/>

        <div>
            <div id="previews" class="dz-default dz-message box__input dropzone">
                <div style="text-align:center">
                    <i class="fa fa-cloud-upload" style="font-size:23px;position:relative;top:4px;"></i> <span style="margin-left:20px">Drop files  to attach or browse</span>
                </div>
            </div>
            <div id="previewFiles"></div>
        </div>
        <br />
        <div>
            <input type="submit" id="Submit" name="Submit" class="btn btn-success m-t-5" value="Submit" />
        </div>


    }

    <table class="table table-striped table-hover">
        <thead>
        <tr>
            <th><sort display-name="Name" column-name="Name"/></th>
            <th><sort display-name="Document Type" column-name="DocumentTypeId"/></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.DocumentSearchResult)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DocumentType.Name)
                </td>
            </tr>
        }
        </tbody>
        <tfoot>
        <tr>
            <td class="tc" colspan="12">
                <pageing/>
            </td>
        </tr>
        </tfoot>
    </table>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        Dropzone.autoDiscover = false;
        $('#myDropzone').dropzone({
            //parameter name value
            paramName: "files",
            //clickable div id
            clickable: '#previews',
            //preview files container Id
            previewsContainer: "#previewFiles",
            autoProcessQueue: false,
            uploadMultiple: true,
            parallelUploads: 100,
            maxFiles: 100,
            //  url:"/", // url here to save file
            maxFilesize: 100,//max file size in MB,
            addRemoveLinks: true,
            dictResponseError: 'Server not Configured',
            acceptedFiles: ".png,.jpg,.gif,.bmp,.jpeg,.pdf",// use this to restrict file type
            init: function () {
                var self = this;
                // config
                self.options.addRemoveLinks = true;
                self.options.dictRemoveFile = "Delete";
                //New file added
                self.on("addedfile", function (file) {
                    console.log('new file added ', file);
                    $('.dz-success-mark').hide();
                    $('.dz-error-mark').hide();
                });
                // Send file starts
                self.on("sending", function (file) {
                    console.log('upload started', file);
                    $('.meter').show();
                });

                // File upload Progress
                self.on("totaluploadprogress", function (progress) {
                    console.log("progress ", progress);
                    $('.roller').width(progress + '%');
                });

                self.on("queuecomplete", function (progress) {
                    $('.meter').delay(999).slideUp(999);
                });

                // On removing file
                self.on("removedfile", function (file) {
                    console.log(file);
                });

                $('#Submit').on("click", function (e) {
                    e.preventDefault();
                    e.stopPropagation();
                    // Validate form here if needed
                   
                    if (self.getQueuedFiles().length > 0) {
                        self.processQueue();
                            

                    } else {
                        self.uploadFiles([]);
                        $('#myDropzone').submit();
                    }
                    
                });

               
                 
                self.on("successmultiple", function (files, response) {
                    // Gets triggered when the files have successfully been sent.
                    // Redirect user or notify of success.
                   
                });
            }
        });


    })

</script>